name: CI/CD Workflow

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

permissions:
  id-token: write
  contents: read

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:15-alpine
  #       env:
  #         POSTGRES_USER: root
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: simple_bank
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4

  #     - name: Set up Go 1.x
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: "^1.21"
  #       id: go

  #     - name: Install golang-migrate
  #       run: |
  #         curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
  #         sudo mv migrate /usr/bin/migrate
  #         which migrate

  #     - name: Run migrations
  #       run: make migrate_up

  #     - name: Test
  #       run: make test

  deploy:
    name: Build & deploy image
    runs-on: ubuntu-latest
    # needs:
    #   - test
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/master')
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::290922543121:role/github-actions-role
          aws-region: ap-southeast-1

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple-bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/simple-bank
          tags: |
            type=ref,event=pr
            type=ref,event=tag
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
